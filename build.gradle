buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'net.researchgate:gradle-release:2.5.0'
        classpath 'ch.raffael.pegdown-doclet:pegdown-doclet:1.3'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1"
    }
}

ext.isReleaseVersion = !version.endsWith("-SNAPSHOT")

apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'net.researchgate.release'
apply plugin: 'ch.raffael.pegdown-doclet'
apply plugin: 'license'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.7.8"
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "com.intellij:openapi:7.0.3"
    testCompile("org.spockframework:spock-core:${spockVersion}")
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)
    compile "com.blackbuild.klum.common:klum-common:0.1"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

release {
    tagTemplate = 'v${version}'
}

nexusStaging {
    packageGroup = "com.blackbuild"
}

modifyPom {
    project {
        name 'KlumDSL'
        packaging 'jar'
        description 'A transformation for creating convenient configuration model DSLs.'
        url 'https://github.com/klum-dsl/klum-ast'

        scm {
            connection 'scm:svn:https://github.com/klum-dsl/klum-ast.git'
            developerConnection 'scm:svn:https://github.com/klum-dsl/klum-ast.git'
            url 'https://github.com/klum-dsl/klum-ast'
        }

        licenses {
            license {
                name 'The MIT License (MIT)'
                url 'http://opensource.org/licenses/MIT'
            }
        }

        developers {
            developer {
                id 'pauxus'
                name 'Stephan Pauxberger'
                email 'stephan@blackbuild.com'
            }
        }
    }
}

afterEvaluate {
    // modify dependecies for generated pom
    project.poms*.whenConfigured { pom ->
        pom.dependencies.find { it.artifactId == "groovy-all" }.optional = true
        pom.dependencies.find { it.artifactId == "openapi" }.optional = true
    }
}

afterReleaseBuild.dependsOn uploadArchives